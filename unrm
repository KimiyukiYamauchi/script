#!/bin/bash

# unrm - 指定されたファイルが隠しディレクトリにあるかどうかを探す。該当
# するファイルが複数見つかった場合には、日付の新しい順にリストを表示し、
# 目的のファイルをユーザに選択させる

# 重要！各ユーザの隠しファイルは何らかの手段（cron など）を使って、
# 定期的に削除したほうがよい。さもないと隠しディレクトリ内のファイル
# が際限なく増え続け、システムのディスクスペースを使いきってしまう。

mydir="$HOME/.deleted-files"
realrm="/bin/rm"
move="/bin/mv"

dest=$(pwd)

if [ ! -d $mydir ] ; then
	echo "$0: No deleted files directory: nothing to unrm" >&2 ; exit 1
fi

cd $mydir

if [ $# -eq 0 ] ; then # 引数の指定がないときはリストを表示する
	echo "Contents of your deleted files archive (sorted by date):"
	ls -FC | sed -e 's/\([[:digit:]][[:digit:]]\.\)\{5\}//g' \
		-e 's/^/  /'
	exit 0
fi

# 引数が指定されている場合にはパターンとして使い、パターンに一致する
# ファイルまたはディレクトリが複数あるかどうかを調べる

match="$(ls *"$1" 2> /dev/null | wc -l)"

if [ $match -eq 0 ] ; then
	echo "No match for \"$1\" in the deleted file archive." >&2
	exit 1
fi

if [ $match -gt 1 ] ; then
	echo "Moare than one file or directory match in the archives:"
	index=1
	ls -td *"$1" | while read name
	do
		datetime="$(echo $name | cut -c1-14 | \
			awk -F. '{ print $5"/"$4" at "$3":"$2":"$1 }')"	
		if [ -d "$name" ] ; then
			size="$(ls "$name" | wc -l | sed 's/[^[:digit]]//g')"
			echo " $index)   $1  (contents = ${size} times, deleted = $datetime)"
		else
			size="$(ls -sdkl "$name" | awk '{print $1}')"
			echo " $index)   $1  (size = ${size}kb, deleted = $datetime)"
		fi
		index=$(( index + 1))
	done

	echo ""
	echo -n "Which version of $1 do you want to resotre ('0' to quit)? [1] : "
	read desired

	if [ $desired -lt 1 ] ; then
		echo "$0: resotre cancelled by user." >&2 ; exit 1
	fi

	restore="$(ls -td1 *"$1" | sed -n "${desired}p")"

	if [ -e "$dest/$1" ] ; then
		echo "\"$1\" alreadly exists in the directory. Cannot overwrite." >&2
		exit 1
	fi

	echo -n "Restoring file \"$1\" ..."
	$move "$restore" "$dest/$1"
	echo "done."

	echo -n "Delete the additional copies of this file? [y] "
	read answer

	if [ ${answer:=y} = "y" ] ; then
		$realrm -rf *"$1"
		echo "deleted."
	else
		echo "additional copies retained."
	fi

else
	if [ -e "$dest/$1" ] ; then
		echo "\"$1\" already exists in this directory. Cannot overwrite." >&2
		exit 1
	fi

	restore="$(ls -d *"$1")"

	echo -n "Restoring file \"$1\" ..."
	$move "$restore" "$dest/$1"
	echo "done."
fi

exit 0
	 
